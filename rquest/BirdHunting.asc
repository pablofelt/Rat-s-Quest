
// new module script
ParticleSystemManager PS; // only single instance of this should exist

int magpie_particle_system = -1;
int score = 0;
function repeatedly_execute() {
  
  // put anything you want to happen every game cycle, even when
  // the game is paused, here
  
  if (IsGamePaused() == 1) return;

  // put anything you want to happen every game cycle, but not
  // when the game is paused, here
  
  // ensure cursor is crosshairs
  if (magpie_particle_system!=-1 && GetCursorMode()!=eModeUsermode2){
    SetCursorMode(eModeUsermode2);
  }
  
  // hunting is finished -- go back to original room
  if (IsTimerExpired(4)){
    SetTimer(4, 0);
    // exit
    while(PS.num_systems){
      PS.DeleteLastSystem();
    }
    // go back to room
    magpie_particle_system = -1;
    SetMouseCursor(eModeTalkto);
    
    // stop squawking
    aMagpieSquawks.Stop();
    
    // go back to gmas house
    player.ChangeRoom(12, 550, 500);
    
    // change cursor back to talking
    SetCursorMode(eModeTalkto);
    
    // give ourselves a couple of seconds to get back to the original room
    SetTimer(5, GetGameSpeed()*1);
  }
  
  // we've returned to the original room -- report
  if (IsTimerExpired(5)){
    SetTimer(5, 0);
    
    // get encouraging message
    sharon.Say("You managed to bag %d magpies.", score);
    if (score <= 1){
      sharon.Say("That was the most disgusting display of humanitarianism I ever saw!");
    }
    else if (score <= 5){
      sharon.Say("I think you owe ME a silver dollar for making watch that sorry performance!");
    }
    else if (score <= 10){
      sharon.Say("Would you like to borrow my glasses?");
    }
    else if (score <= 15){
      sharon.Say("My one-eyed coon hound shoots straighter than that!");
    }
    else if (score <= 20){
      sharon.Say("Well, you almost did it.");
      sharon.Say("I'm almost not ashamed to call you my granddaughter.");
    }
    else if (score <= 25){
      sharon.Say("Once again you were a day late and a dollar short.");
    }
    else if (score < 30){
      sharon.Say("That was close. But close doesn't feed the admiral's pussycat. You'll have to do it all over again.");
    }
    else if (score <= 35){
      sharon.Say("You did it! The apple don't fall far from the tree.");
    }
    else if (score <= 40){
      sharon.Say("Wow! That was amazing! Just wait until I tell Carolyn!");
    }
    else if (score > 40){
      sharon.Say("You're cheating. I don't know how you are doing it, but I'm sure you are cheating.");
      sharon.Say("That's my girl.");
    }
    
    // get reward
    if (score>=30 && !HasEarnedSilverDollar){
      sharon.Say("Here's your silver dollar. You earned it.");
      player.AddInventory(iSilverDollar);
      HasEarnedSilverDollar=true;
      GiveScore(5);
    }
    
  }
}

function on_mouse_click(MouseButton button) {
  // called when a mouse button is clicked. button is either LEFT or RIGHT
  if (IsGamePaused() == 1) {
    // Game is paused, so do nothing (ie. don't allow mouse click)
  }
  else if (button == eMouseLeft) {
    /************
    * Bird Hunting
    *************/
    if (magpie_particle_system!=-1){
      
      // bang!
      aShotgunBlast.Play(eAudioPriorityHigh);
      
      // did we hit anything?
      if (PS.DeleteParticleNear(magpie_particle_system, mouse.x, mouse.y, 30)){ 
        // draw exploded magpie
        DynamicSprite *sp = DynamicSprite.CreateFromExistingSprite(127);
        Overlay.CreateGraphical(mouse.x-(sp.Width/2), mouse.y-(sp.Height/2), 127, true);
        // this gets cleared automatically (by the partical filter, I think)
        
        //Display("you got one!");
        score++;
        player.SayBackground(String.Format("%d",score));
      }
    }
    else{
      // normal mouse handling
    }
  }
}

function hunt_birds(int huntingRoom, int startBirdSprite, int endBirdSprite, int seconds){
  
   // go to hunting room
  player.ChangeRoom(huntingRoom, 0, 680);
  SetTimer(4, GetGameSpeed()*seconds);
  score = 0;
  
  // special cursor
  SetMouseCursor(eModeUsermode2);
  
  // start squawking
  aMagpieSquawks.PlayFrom(0, eAudioPriorityLow, eRepeat);
  
  // launch the birds
  magpie_particle_system = PS.CreateSystem(200, false, dtBackground);
  
  // Create particles allways and one every x seconds
  PS.emitter_creation_mode (magpie_particle_system, rmAllways, 0, FloatToInt(IntToFloat(GetGameSpeed())*1.1), 1); 
  PS.emitter_set_position (magpie_particle_system, ptLine, 0.0, 600.0, 800., 600.0);
  
  PS.emitter_set_velocity (magpie_particle_system, 10, 70, 260, 280);
  PS.emitter_set_age (magpie_particle_system, 900, 900);
  PS.emitter_set_sprite (magpie_particle_system, startBirdSprite, endBirdSprite);
  
  PS.action_set_bound_box (magpie_particle_system, 0, 0, 800, 600);
  //PS.action_add_force (magpie_particle_system, ftConstant, 0.0, 9.8);
  //PS.action_add_force(magpie_particle_system, ftLateralRandom, 5.0);
  PS.action_add_force (magpie_particle_system, ftSidetoSide, -20.0, 0.0, 20.0, 0.0, 1.0, 0.0);
    
  // for the rest, see execute_repeatedly() 
}